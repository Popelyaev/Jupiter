
@use 'sass:math';
@import "variables.scss";

//Обнуление
*,
*::before,
*::after {
   margin: 0;
   padding: 0;
   border: 0;
   box-sizing: border-box;
}

a {
   text-decoration: none;
   color: inherit;
   font-family: inherit;
   font-weight: inherit
}

ul,
ol,
li {
   list-style: none;
}

img {
   vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
   font-weight: inherit;
   font-size: inherit;

}

html,
body {
   height: 100%;
   line-height: 1;
   // font-size: $fontSizeMain;
   color: $color4;
   font-family: $fontFamilyMain;
   font-weight: 300;
}

body {
   display: flex;
   flex-direction: column;
}
//Блоки
.wrapper {
   min-height: 100%;
   overflow: hidden;
   display: flex;
   flex-direction: column;
   
}
main {
   flex: 1 1 auto;
}
._container {
   position: relative;
   max-width: $maxWidthContainer;
   margin: 0 auto;
   padding: 0 15px;
}
._ibg{
   position: relative;
}
._ibg img{
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   object-fit: cover;
}


//ТО %
@function prc($pxOne, $pxTwo) {
   $result: math.div($pxOne, $pxTwo) * 100%;
   @return $result;
}
//REM
@function rem($px) {
   $result: math.div($px, 16) + rem;
   @return $result;
}
//EM
@function em($pxOne, $pxFontpx) {
   $result: math.div($pxOne, $pxFontpx) + em;
   @return $result;
}
//LINE HEIGHT
@function lh($pxOne, $pxTwo) {
   $result: math.div($pxOne, $pxTwo);
   @return $result;
}
//Отзывчивое св-во
@function respon($pxOne, $proc) {
   $result: ($pxOne * $proc) + ($pxOne - ($pxOne * $proc)) * ((100vw - $minWidth) / ($maxWidthContainer - $minWidth));
   @return $result;
}

@import "main.scss";
@import "header.scss";
@import "burger.scss";
@import "footer.scss";
@import "spoller.scss";
